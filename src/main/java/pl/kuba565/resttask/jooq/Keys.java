/*
 * This file is generated by jOOQ.
 */
package pl.kuba565.resttask.jooq;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import pl.kuba565.resttask.jooq.tables.Car;
import pl.kuba565.resttask.jooq.tables.Databasechangeloglock;
import pl.kuba565.resttask.jooq.tables.Log;
import pl.kuba565.resttask.jooq.tables.Worker;
import pl.kuba565.resttask.jooq.tables.records.CarRecord;
import pl.kuba565.resttask.jooq.tables.records.DatabasechangeloglockRecord;
import pl.kuba565.resttask.jooq.tables.records.LogRecord;
import pl.kuba565.resttask.jooq.tables.records.WorkerRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CarRecord, Integer> IDENTITY_CAR = Identities0.IDENTITY_CAR;
    public static final Identity<LogRecord, Integer> IDENTITY_LOG = Identities0.IDENTITY_LOG;
    public static final Identity<WorkerRecord, Integer> IDENTITY_WORKER = Identities0.IDENTITY_WORKER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CarRecord> PK_CAR = UniqueKeys0.PK_CAR;
    public static final UniqueKey<DatabasechangeloglockRecord> PK_DATABASECHANGELOGLOCK = UniqueKeys0.PK_DATABASECHANGELOGLOCK;
    public static final UniqueKey<LogRecord> PK_LOG = UniqueKeys0.PK_LOG;
    public static final UniqueKey<WorkerRecord> PK_WORKER = UniqueKeys0.PK_WORKER;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CarRecord, LogRecord> FK_LOG = ForeignKeys0.FK_LOG;
    public static final ForeignKey<WorkerRecord, CarRecord> FK_CAR = ForeignKeys0.FK_CAR;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CarRecord, Integer> IDENTITY_CAR = Internal.createIdentity(Car.CAR, Car.CAR.ID);
        public static Identity<LogRecord, Integer> IDENTITY_LOG = Internal.createIdentity(Log.LOG, Log.LOG.ID);
        public static Identity<WorkerRecord, Integer> IDENTITY_WORKER = Internal.createIdentity(Worker.WORKER, Worker.WORKER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CarRecord> PK_CAR = Internal.createUniqueKey(Car.CAR, "PK_CAR", Car.CAR.ID);
        public static final UniqueKey<DatabasechangeloglockRecord> PK_DATABASECHANGELOGLOCK = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, "PK_DATABASECHANGELOGLOCK", Databasechangeloglock.DATABASECHANGELOGLOCK.ID);
        public static final UniqueKey<LogRecord> PK_LOG = Internal.createUniqueKey(Log.LOG, "PK_LOG", Log.LOG.ID);
        public static final UniqueKey<WorkerRecord> PK_WORKER = Internal.createUniqueKey(Worker.WORKER, "PK_WORKER", Worker.WORKER.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<CarRecord, LogRecord> FK_LOG = Internal.createForeignKey(Keys.PK_LOG, Car.CAR, "FK_LOG", Car.CAR.LOG_ID);
        public static final ForeignKey<WorkerRecord, CarRecord> FK_CAR = Internal.createForeignKey(Keys.PK_CAR, Worker.WORKER, "FK_CAR", Worker.WORKER.CAR_ID);
    }
}
