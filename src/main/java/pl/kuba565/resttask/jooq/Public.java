/*
 * This file is generated by jOOQ.
 */
package pl.kuba565.resttask.jooq;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import pl.kuba565.resttask.jooq.tables.Car;
import pl.kuba565.resttask.jooq.tables.Databasechangelog;
import pl.kuba565.resttask.jooq.tables.Databasechangeloglock;
import pl.kuba565.resttask.jooq.tables.Log;
import pl.kuba565.resttask.jooq.tables.Worker;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = -1185182537;

    /**
     * The reference instance of <code>PUBLIC</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>PUBLIC.CAR</code>.
     */
    public final Car CAR = Car.CAR;

    /**
     * The table <code>PUBLIC.DATABASECHANGELOG</code>.
     */
    public final Databasechangelog DATABASECHANGELOG = Databasechangelog.DATABASECHANGELOG;

    /**
     * The table <code>PUBLIC.DATABASECHANGELOGLOCK</code>.
     */
    public final Databasechangeloglock DATABASECHANGELOGLOCK = Databasechangeloglock.DATABASECHANGELOGLOCK;

    /**
     * The table <code>PUBLIC.LOG</code>.
     */
    public final Log LOG = Log.LOG;

    /**
     * The table <code>PUBLIC.WORKER</code>.
     */
    public final Worker WORKER = Worker.WORKER;

    /**
     * No further instances allowed
     */
    private Public() {
        super("PUBLIC", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Car.CAR,
            Databasechangelog.DATABASECHANGELOG,
            Databasechangeloglock.DATABASECHANGELOGLOCK,
            Log.LOG,
            Worker.WORKER);
    }
}
